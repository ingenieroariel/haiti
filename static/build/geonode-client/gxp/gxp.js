Ext.namespace("gxp");gxp.util={_loadCallbacks:[],dispatch:function(functions,complete,scope){complete=complete||Ext.emptyFn;scope=scope||this;var requests=functions.length;var responses=0;var storage={};function respond(){++responses;if(responses===requests){complete.call(scope,storage);}}
function trigger(index){window.setTimeout(function(){functions[index].apply(scope,[respond,storage]);});}
for(var i=0;i<requests;++i){trigger(i);}},loadScript:function(url,complete,scope,attributes){var script=document.createElement("script");script.src=url;if(complete){script.onload=complete.createDelegate(scope||window);script.onreadystatechange=function(){if(this.readyState=="complete"){complete.call(scope||window);}}}
if(attributes){for(a in attributes){script[a]=attributes[a];}}
document.getElementsByTagName("head")[0].appendChild(script);},getSymbolTypeFromRule:function(rule){var symbolizer=rule.symbolizer;if(symbolizer["Line"]||symbolizer["Point"]||symbolizer["Polygon"]){for(var type in symbolizer){if(type!="Text"){return type;}}}}};Ext.namespace("gxp.plugins");gxp.plugins.LayerSource=Ext.extend(Ext.util.Observable,{constructor:function(config){this.initialConfig=config;Ext.apply(this,config);this.addEvents("ready");gxp.plugins.LayerSource.superclass.constructor.apply(this,arguments);},init:function(target){this.target=target;var callback=function(){this.fireEvent("ready",this);}
this.createStore(callback.createDelegate(this));},createStore:function(callback){callback();},createLayerRecord:function(config){}});Ext.namespace("gxp.plugins");gxp.plugins.WMSSource=Ext.extend(gxp.plugins.LayerSource,{createStore:function(callback){var parts=this.url.split("?");var params=Ext.apply(parts[1]&&Ext.urlDecode(parts[1])||{},{SERVICE:"WMS",REQUEST:"GetCapabilities"});var url=Ext.urlAppend(parts[0],Ext.urlEncode(params));this.store=new GeoExt.data.WMSCapabilitiesStore({url:url,autoLoad:true,listeners:{load:callback}});},createLayerRecord:function(config){var record;var index=this.store.findExact("name",config.name);if(index>-1){Ext.data.Record.AUTO_ID++;record=this.store.getAt(index).copy(Ext.data.Record.AUTO_ID);var layer=record.get("layer");var projConfig=this.target.mapPanel.map.projection;var projection=this.target.mapPanel.map.getProjectionObject()||(projConfig&&new OpenLayers.Projection(projConfig))||new OpenLayers.Projection("EPSG:4326");var nativeExtent=record.get("bbox")[projection.getCode()]
var maxExtent=(nativeExtent&&OpenLayers.Bounds.fromArray(nativeExtent.bbox))||OpenLayers.Bounds.fromArray(record.get("llbbox")).transform(new OpenLayers.Projection("EPSG:4326"),projection);layer=new OpenLayers.Layer.WMS(layer.name,layer.url,{layers:layer.params["LAYERS"],transparent:("transparent"in config)?config.transparent:true},{attribution:layer.attribution,maxExtent:maxExtent,visibility:("visibility"in config)?config.visibility:true});if(config.title){layer.setName(config.title);record.set("title",config.title);}
record.data.layer=layer;record.set("group",config.group);record.commit();}
return record;}});Ext.preg("gx-wmssource",gxp.plugins.WMSSource);Ext.namespace("gxp");gxp.WMSLayerPanel=Ext.extend(Ext.TabPanel,{layerRecord:null,activeTab:0,border:false,imageFormats:/png|gif|jpe?g/i,initComponent:function(){this.addEvents("change");this.items=[this.createAboutPanel(),this.createDisplayPanel()];gxp.WMSLayerPanel.superclass.initComponent.call(this);},createAboutPanel:function(){return{title:"About",defaults:{border:false},items:[{layout:"form",labelWidth:70,items:[{xtype:"textfield",fieldLabel:"Title",anchor:"99%",value:this.layerRecord.get("title"),listeners:{change:function(field){this.layerRecord.set("title",field.getValue());this.layerRecord.commit();this.fireEvent("change");},scope:this}},{xtype:"textfield",fieldLabel:"Name",anchor:"99%",value:this.layerRecord.get("name"),readOnly:true}]},{layout:"form",labelAlign:"top",items:[{xtype:"textarea",fieldLabel:"Description",grow:true,growMax:150,anchor:"99%",value:this.layerRecord.get("abstract"),readOnly:true}]}]};},createDisplayPanel:function(){var record=this.layerRecord;var layer=record.get("layer");var opacity=layer.opacity;if(opacity==null){opacity=1;}
var formats=[];var currentFormat=layer.params["FORMAT"].toLowerCase();Ext.each(this.layerRecord.get("formats"),function(format){if(this.imageFormats.test(format)){formats.push(format.toLowerCase());}},this);if(formats.indexOf(currentFormat)===-1){formats.push(currentFormat);}
var transparent=layer.params["TRANSPARENT"];transparent=(transparent==="true"||transparent===true);return{title:"Display",layout:"form",labelWidth:70,items:[{xtype:"slider",name:"opacity",fieldLabel:"Opacity",value:opacity*100,values:[opacity*100],anchor:"99%",isFormField:true,listeners:{change:function(slider,value){layer.setOpacity(value/100);this.fireEvent("change");},scope:this}},{xtype:"combo",fieldLabel:"Format",store:formats,value:currentFormat,mode:"local",triggerAction:"all",editable:false,anchor:"99%",listeners:{select:function(combo){layer.mergeNewParams({format:combo.getValue()});this.fireEvent("change");},scope:this}},{xtype:"checkbox",fieldLabel:"Transparent",checked:transparent,listeners:{check:function(checkbox,checked){layer.mergeNewParams({transparent:checked?"true":"false"});this.fireEvent("change");},scope:this}}]};}});Ext.reg('gx_wmslayerpanel',gxp.WMSLayerPanel);Ext.namespace("gxp.plugins");gxp.plugins.GoogleSource=Ext.extend(gxp.plugins.LayerSource,{apiKeyPrompt:"Please enter the Google API key for ",constructor:function(config){this.config=config;gxp.plugins.GoogleSource.superclass.constructor.apply(this,arguments);},createStore:function(callback){if(gxp.plugins.GoogleSource.monitor.ready){this.syncCreateStore(callback);}else{gxp.plugins.GoogleSource.monitor.on({ready:function(){this.syncCreateStore(callback);},scope:this});if(!gxp.plugins.GoogleSource.monitor.loading){this.loadScript(callback);}}},syncCreateStore:function(callback){var mapTypes=[G_NORMAL_MAP,G_SATELLITE_MAP,G_HYBRID_MAP,G_PHYSICAL_MAP];var len=mapTypes.length;var layers=new Array(len);var mapType;for(var i=0;i<len;++i){mapType=mapTypes[i];layers[i]=new OpenLayers.Layer.Google("Google "+mapType.getName(),{type:mapType,sphericalMercator:true,maxExtent:new OpenLayers.Bounds(-20037508.34,-20037508.34,20037508.34,20037508.34),restrictedExtent:new OpenLayers.Bounds(-20037508.34,-20037508.34,20037508.34,20037508.34)})}
this.store=new GeoExt.data.LayerStore({layers:layers,fields:[{name:"abstract",type:"string"},{name:"group",type:"string"}]});this.store.each(function(l){l.set("group","background");l.set("abstract",l.get("layer").type.getAlt());});callback();},createLayerRecord:function(config){var record;var cmp=function(l){return l.get("layer").type==window[config.name];};if(this.target.mapPanel.layers.findBy(cmp)==-1){record=this.store.getAt(this.store.findBy(cmp));var layer=record.get("layer");if(config.title){layer.setName(config.title);record.set("title",config.title);}
if(config.visibility){layer.visibility=config.visibility}
record.set("group",config.group);record.commit();};return record;},loadScript:function(){if(!this.initialConfig.apiKey&&window.location.hostname!=="localhost"){Ext.Msg.prompt("Google API Key",this.apiKeyPrompt+window.location.hostname+" <sup><a target='_blank' href='http://code.google.com/apis/maps/'>?</a></sup>",function(btn,key){if(btn==="ok"){this.initialConfig.apiKey=key;this.loadScript(callback);}else{return false;}},this);return;}
var params={key:this.initialConfig.apiKey,autoload:Ext.encode({modules:[{name:"maps",version:"2.X",nocss:"true",callback:"gxp.plugins.GoogleSource.monitor.onScriptLoad"}]})};var script=document.createElement("script");script.src="http://www.google.com/jsapi?"+Ext.urlEncode(params);document.getElementsByTagName("head")[0].appendChild(script);}});gxp.plugins.GoogleSource.monitor=new(Ext.extend(Ext.util.Observable,{ready:!!window.G_NORMAL_MAP,loading:false,constructor:function(){this.addEvents("ready");},onScriptLoad:function(){var monitor=gxp.plugins.GoogleSource.monitor;if(!monitor.ready){monitor.ready=true;monitor.loading=false;monitor.fireEvent("ready");}}}))();Ext.preg("gx-googlesource",gxp.plugins.GoogleSource);Ext.namespace("gxp");gxp.WMSStylesDialog=Ext.extend(Ext.Container,{layerRecord:null,styles:null,rulesFieldSet:null,rulesToolbar:null,symbolType:null,selectedStyle:null,modifiedStyles:undefined,selectedRule:null,initComponent:function(){var defConfig={layout:"form",items:[{xtype:"fieldset",title:"Styles",labelWidth:75,style:"margin-bottom: 0;",items:this.createStylesCombo()},{xtype:"toolbar",style:"border-width: 0 1px 1px 1px; margin-bottom: 10px;",items:[{xtype:"button",iconCls:"add",text:"Add"},{xtype:"button",iconCls:"delete",text:"Remove"},{xtype:"button",iconCls:"edit",text:"Edit"},{xtype:"button",iconCls:"duplicate",text:"Duplicate",handler:function(){var combo=this.items.get(0).items.get(0);var newStyle=this.selectedStyle.clone();newStyle.name="Copy of "+
this.selectedStyle.name;this.styles.push(newStyle);var store=combo.store;store.add(new store.recordType({name:"* "+newStyle.name,title:newStyle.title,abstract:newStyle.description}));},scope:this}]}],modifiedStyles:{}};Ext.applyIf(this,defConfig);gxp.WMSStylesDialog.superclass.initComponent.apply(this,arguments);this.addEvents("stylemodified");this.on({"stylemodified":function(){var style=this.selectedStyle;this.modifiedStyles[style.id]=true;var combo=this.items.get(0).items.get(0);var index=combo.store.findExact("name",combo.getValue());var name="* "+style.name;combo.store.getAt(index).set("name",name);combo.setValue(name);},scope:this});var layer=this.layerRecord.get("layer");Ext.Ajax.request({method:"GET",url:layer.url,params:{request:"GetStyles",layers:layer.params.LAYERS},success:this.parseSLD,failure:this.createLegendImage,scope:this});},addRulesFieldSet:function(){this.rulesFieldSet=new Ext.form.FieldSet({title:"Rules",autoScroll:true,style:"margin-bottom: 0;"});this.rulesToolbar=new Ext.Toolbar({style:"border-width: 0 1px 1px 1px;",items:[{xtype:"button",iconCls:"add",text:"Add",handler:function(){var symbolizer={};symbolizer[this.symbolType]={};var legend=this.rulesFieldSet.items.get(0);legend.rules.push(new OpenLayers.Rule({name:gxp.RulePanel.prototype.uniqueRuleName.call(this),symbolizer:symbolizer}));legend.update();},scope:this},{xtype:"button",iconCls:"delete",text:"Remove",handler:function(){var rule=this.selectedRule;var legend=this.rulesFieldSet.items.get(0);legend.unselect();legend.rules.remove(rule);legend.update();},scope:this,disabled:true},{xtype:"button",iconCls:"edit",text:"Edit",handler:this.editRule,scope:this,disabled:true},{xtype:"button",iconCls:"duplicate",text:"Duplicate",handler:function(){var legend=this.rulesFieldSet.items.get(0);legend.rules.push(this.selectedRule.clone());legend.update();},scope:this,disabled:true}]});this.add(this.rulesFieldSet,this.rulesToolbar);},editRule:function(){var rule=this.selectedRule;var origRule=rule.clone();var saveOrigProperties=function(){origProperties={title:rule.title,symbolizer:Ext.decode(Ext.encode(rule.symbolizer)),filter:rule.filter?rule.filter.clone():null,minScaleDenominator:rule.minScaleDenominator,maxScaleDenominator:rule.maxScaleDenominator};}
saveOrigProperties();var wfsUrl=this.initialConfig.wfsUrl;if(!wfsUrl){var wmsUrl=this.layerRecord.get("layer").url;var urlParts=wmsUrl.split("?");var params=Ext.urlDecode(urlParts[urlParts.length-1]);delete params[""];Ext.apply(params,{"SERVICE":"WFS","REQUEST":"DescribeFeatureType"});wfsUrl=Ext.urlAppend(urlParts[0],Ext.urlEncode(params));}
var ruleDlg=new Ext.Window({title:"Style Rule: "+(rule.title||rule.name),width:340,autoHeight:true,items:[{xtype:"gx_rulepanel",symbolType:this.symbolType,rule:rule,attributes:new GeoExt.data.AttributeStore({url:wfsUrl}),bodyStyle:"padding: 10px",border:false,defaults:{autoHeight:true,hideMode:"offsets"},listeners:{"change":function(cmp,rule){this.fireEvent("stylemodified",this,this.selectedStyle);},scope:this}}],buttons:[{text:"Cancel",handler:function(){Ext.apply(rule,origProperties);ruleDlg.close();}},{text:"Apply",handler:function(){this.rulesFieldSet.items.get(0).update();saveOrigProperties();},scope:this},{text:"Save",handler:function(){this.rulesFieldSet.items.get(0).update();ruleDlg.close();},scope:this}]});ruleDlg.show();},removeRulesFieldSet:function(){this.remove(this.rulesFieldSet);this.remove(this.rulesToolbar);this.doLayout();},parseSLD:function(response,options){var data=response.responseXML;if(!data||!data.documentElement){data=new OpenLayers.Format.XML().read(response.responseText);}
try{var sld=new OpenLayers.Format.SLD().read(data);var layer=this.layerRecord.get("layer").params.LAYERS;this.styles=sld.namedLayers[layer].userStyles;this.selectedStyle=this.styles[0];this.addRulesFieldSet();this.addVectorLegend(this.selectedStyle.rules);}
catch(e){this.items.get(1).disable();var legendImage=this.createLegendImage();this.addRulesFieldSet();this.rulesFieldSet.add(legendImage);this.rulesToolbar.disable();}},createStylesCombo:function(){var styles=this.layerRecord.get("styles");var store=new Ext.data.JsonStore({data:{styles:styles},root:"styles",idProperty:"name",fields:["name","title","abstract","legend"]});return new Ext.form.ComboBox({fieldLabel:"Choose style",store:store,displayField:"name",value:this.layerRecord.get("layer").params.STYLES||styles.length?styles[0].name:"default",disabled:!styles.length,mode:"local",typeAhead:true,triggerAction:"all",forceSelection:true,anchor:"100%",listeners:{"select":this.changeStyle,scope:this}});},createLegendImage:function(){var self=this;return new GeoExt.WMSLegend({showTitle:false,layerRecord:this.layerRecord,defaults:{listeners:{"render":function(){this.getEl().on({"load":self.doLayout,"error":self.removeRulesFieldSet,scope:self});}}}});},changeStyle:function(field,value){var styleName=value.get("name");var layer=this.layerRecord.get("layer");var styles=this.layerRecord.get("styles");var legend=value.get("legend");if(styles&&legend){var style;for(var i=0,len=styles.length;i<len;++i){style=styles[i];if(style.name===styleName){break;}}
var urlParts=value.get("legend").href.split("?");var params=Ext.urlDecode(urlParts[1]);params.STYLE=styleName;urlParts[1]=Ext.urlEncode(params);style.legend.href=urlParts.join("?");}
layer.mergeNewParams({styles:styleName});if(this.styles){var style=this.styles[value.store.indexOf(value)];this.rulesFieldSet.remove(this.rulesFieldSet.items.get(0));this.addVectorLegend(style.rules);}},addVectorLegend:function(rules){for(var symbolType in rules[0].symbolizer){break;}
this.symbolType=symbolType;this.rulesFieldSet.add({xtype:"gx_vectorlegend",showTitle:false,rules:rules,symbolType:symbolType,selectOnClick:true,enableDD:true,listeners:{"ruleselected":function(cmp,rule){var tbItems=this.rulesToolbar.items;this.selectedRule=rule;tbItems.get(1).enable();tbItems.get(2).enable();tbItems.get(3).enable();},"ruleunselected":function(cmp,rule){var tbItems=this.rulesToolbar.items;this.selectedRule=null;tbItems.get(1).disable();tbItems.get(2).disable();tbItems.get(3).disable();},"rulemoved":function(){this.fireEvent("stylemodified",this,this.selectedStyle);},scope:this}});this.rulesFieldSet.doLayout();}});Ext.reg('gx_wmsstylesdialog',gxp.WMSStylesDialog);