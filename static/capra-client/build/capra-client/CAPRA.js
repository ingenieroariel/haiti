/*
Copyright (c) 2008-2009, OpenGeo
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright notice,
      this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.
    * Neither the name of the Open Planning Project nor the names
      of its contributors may be used to endorse or promote products derived
      from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.
*/

Ext.namespace("capra");capra.DataGrid=Ext.extend(Ext.util.Observable,{dataTitleHeaderText:"UT:Title",dataNameHeaderText:"UT:Name",dataDetailText:"UT: More information about this layer",layerTitleSuffix:" Layers (UT)",uncategorizedLabel:"UT: Uncategorized",capabilities:null,constructor:function(config){Ext.apply(this,config);if(this.proxy){OpenLayers.ProxyHost=this.proxy;}
var url=this.owsURL({"request":"GetCapabilities","service":"WMS"});this.capabilities=new GeoExt.data.WMSCapabilitiesStore({url:url,fields:[{name:"name",type:"string"},{name:"abstract",type:"string"},{name:"queryable",type:"boolean"},{name:"formats"},{name:"styles"},{name:"llbbox"},{name:"minScale"},{name:"maxScale"},{name:"prefix"},{name:"attribution"},{name:"keywords"},{name:"metadataURLs"},{name:"owsType"}]});Ext.util.Observable.prototype.constructor.apply(this,arguments);this.loadData();},owsURL:function(params){var url=this.ows+'?'+Ext.urlEncode(params);if(this.proxy){url=this.proxy+'?'+Ext.urlEncode({'url':url});}
return url;},loadData:function(){gxp.util.dispatch([function(done){this.capabilities.load({callback:done});}],function(){this.doLayout();},this);},doLayout:function(){var me=this;var categories=this.categories||{};var clusters={};var clusternames=[];var expanderTemplate='<p><b>'+GeoExplorer.CapabilitiesRowExpander.prototype.abstractText+'</b> {abstract}</p>'+'<p><b>'+GeoExplorer.CapabilitiesRowExpander.prototype.attributionText+'</b> {attribution:this.attributionLink}</p>'+'<p><b>'+GeoExplorer.CapabilitiesRowExpander.prototype.metadataText+'</b> {metadataURLs:this.metadataLinks}</p>'+'<p><b>'+GeoExplorer.CapabilitiesRowExpander.prototype.keywordText+'</b> {keywords:this.keywordList}</p>'+'<p><b>'+GeoExplorer.CapabilitiesRowExpander.prototype.downloadText+'</b> '+'<a class="download pdf" href="{name:this.pdfUrl}">PDF</a>, '+'<a class="download kml" href="{name:this.kmlUrl}">KML</a>, '+'<a class="download geotiff" href="{name:this.geoTiffUrl}">GeoTIFF</a>'+'<span class="{owsType:this.showWFS}">, '+'<a class="download shp" href="{name:this.shpUrl}">SHP (ZIP)</a>'+'</span>'+'</p>'+'<p><a href="/data/{name}">'+this.dataDetailText+'</a></p>';function toTitleCase(s){return s.replace(/\b[a-z]/g,function(c){return c.toUpperCase()});}
function createGrid(header,store){var expander=new GeoExplorer.CapabilitiesRowExpander({ows:this.ows,tpl:new Ext.Template(expanderTemplate)});return new Ext.grid.GridPanel({store:store,title:header,plugins:[expander],colModel:new Ext.grid.ColumnModel([expander,{id:"title",header:me.dataTitleHeaderText,dataIndex:"title",sortable:true,renderer:function(value,metaData,record){return"<a href='/data/"+record.get('name')+"'>"+value+"</a>";}},{header:me.dataNameHeaderText,dataIndex:"name",width:180,sortable:true}]),viewConfig:{autoFill:true},sm:new Ext.grid.RowSelectionModel({singleSelect:true}),height:200});}
this.capabilities.filterBy(function(rec){var name=rec.get('name');if(name in categories){var categoryName=categories[name];if(!(categoryName in clusters)){clusternames.push(categoryName);clusters[categoryName]=new Ext.data.Store({recordType:this.capabilities.recordType});}
clusters[categoryName].add(rec);return false;}else{return true;}},this);var grids=[];for(var i=0,len=clusternames.length;i<len;i++){var name=clusternames[i];var header=toTitleCase(name)+this.layerTitleSuffix;var grid=createGrid(header,clusters[name])
grids.push(grid,new Ext.Panel({border:false,height:20}));}
if(this.capabilities.getCount()>0){var name=this.uncategorizedLabel;var header=toTitleCase(name)+this.layerTitleSuffix;var grid=createGrid(header,this.capabilities);grids.push(grid,new Ext.Panel({border:false,height:20}));}
var panel=new Ext.Panel({items:grids,border:false,renderTo:this.renderTo});}});Ext.namespace("MyHazard");MyHazard.Viewer=Ext.extend(Ext.util.Observable,{reportService:"/hazard/report",popup:null,mapPanel:null,appPanel:null,sidebar:null,hazardConfig:null,backgroundManager:null,lineReporterTip:"UT: Line reporter",navActionTipText:"UT: Pan map",pdfButtonText:"UT: PDF Report",pointReporterTip:"UT: Point reporter",polygonReporterTip:"UT: Polygon reporter",reportEmptyDataSetMessage:"UT: Please select some layers before requesting a report.",reportFailureMessage:"UT: Failure while retrieving report...",reportPopupTitle:"UT: MyHazard Report",reportSwitcherTip:"UT: Tooltip here",transparencyButtonText:"UT: Transparency",zoomSliderTipText:"UT: Zoom level",constructor:function(config){this.initialConfig=config;Ext.apply(this,this.initialConfig);this.addEvents("ready");this.backgroundManager=new GeoExplorer.BackgroundLayerManager({proxy:this.proxy,backgroundLayers:config.backgroundLayers});this.load();},load:function(){var dispatchQueue=[function(done){Ext.onReady(function(){this.createLayout();done();},this);},function(done){done();}];dispatchQueue=dispatchQueue.concat(this.backgroundManager.getBackgroundLoaders());gxp.util.dispatch(dispatchQueue,this.activate,this);},createLayers:function(){var layers=[];var hazard;for(var i=0;i<this.hazardConfig.length;i++){hazard=this.hazardConfig[i];var periods=hazard.periods;periods.sort(function(period){return period.length;});var layersParam=[];for(var j=0;j<periods.length;j++){layersParam.push(periods[j].typename);}
layers.unshift(new OpenLayers.Layer.WMS(hazard.hazard,this.GEONODE_WMS,{layers:layersParam,transparent:true,format:"image/gif"},{isBaseLayer:false,buffer:0,displayInLayerSwitcher:false,visibility:false}));}
return layers;},createLayout:function(){this.map=new OpenLayers.Map({allOverlays:true,projection:new OpenLayers.Projection("EPSG:900913"),displayProjection:new OpenLayers.Projection("EPSG:4326"),units:"m",maxResolution:156543.0339,maxExtent:new OpenLayers.Bounds(-20037508.34,-20037508.34,20037508.34,20037508.34),controls:[new OpenLayers.Control.Navigation(),new OpenLayers.Control.PanPanel(),new OpenLayers.Control.ZoomPanel()]});var layers=this.createLayers();this.map.addLayers(layers);this.mapPanel=new GeoExt.MapPanel({region:"center",center:new OpenLayers.LonLat(-87,13).transform(new OpenLayers.Projection("EPSG:4326"),new OpenLayers.Projection("EPSG:900913")),zoom:5,map:this.map,items:[{xtype:"gx_zoomslider",vertical:true,height:100,plugins:new GeoExt.ZoomSliderTip({template:"<div>"+this.zoomSliderTipText+": {zoom}<div>"})},this.createMapOverlay()]});var toolGroup="toolGroup";var tools=[new GeoExt.Action({tooltip:this.navActionTipText,iconCls:"icon-pan",enableToggle:true,pressed:true,allowDepress:false,control:new OpenLayers.Control.Navigation(),map:this.map,toggleGroup:toolGroup}),"-",new GeoExt.Action({tooltip:this.pointReporterTip,iconCls:"icon-point",map:this.map,toggleGroup:toolGroup,group:toolGroup,allowDepress:false,map:this.map,control:this.createReporter(OpenLayers.Handler.Point)}),new GeoExt.Action({tooltip:this.lineReporterTip,iconCls:"icon-line",map:this.map,toggleGroup:toolGroup,group:toolGroup,allowDepress:false,map:this.map,control:this.createReporter(OpenLayers.Handler.Path)}),new GeoExt.Action({tooltip:this.polygonReporterTip,iconCls:"icon-polygon",map:this.map,toggleGroup:toolGroup,group:toolGroup,allowDepress:false,map:this.map,control:this.createReporter(OpenLayers.Handler.Polygon)})];var treeConfig=[];for(var i=0;i<layers.length;i++){treeConfig.push({nodeType:"gx_layer",layer:layers[i].name,allowDrop:false,isLead:false,loader:new GeoExt.tree.LayerParamLoader({param:"LAYERS",baseAttrs:{draggable:false,allowDrop:false}}),listeners:{"move":function(tree,node,oldParent,newParent,index){this.map.setLayerIndex(node.layer,index);},scope:this}});}
treeConfig.push(new GeoExt.tree.BaseLayerContainer({text:this.backgroundContainerText,layerStore:this.layers,loader:{filter:function(record){return record.get('group')==='background';}}}));var opacitySlider=new Ext.Toolbar({items:[new Ext.Toolbar.Button({tooltip:this.transparencyButtonText,disabled:true,disabledClass:'',iconCls:'icon-visibility'}),new MyHazard.LayerGroupOpacitySlider({layers:layers,width:210,vertical:false})]});this.sidebar=new Ext.tree.TreePanel({region:"west",width:250,loader:new Ext.tree.TreeLoader({applyLoader:false}),tbar:tools,bbar:opacitySlider,enableDD:true,rootVisible:false,root:{nodeType:"async",children:treeConfig}});var header=new Ext.Panel({region:"north",autoHeight:true});header.on('render',function(){header.getEl().appendChild(Ext.get('app-header'));});this.appPanel=new Ext.Viewport({width:950,height:400,layout:"border",items:[header,this.sidebar,this.mapPanel]});},activate:function(){Ext.QuickTips.init();this.mapPanel.layers.insert(0,this.backgroundManager.getBackgroundLayers());},createReporter:function(handlerType){return new MyHazard.Reporter(handlerType,{eventListeners:{report:this.report,activate:this.clearPopup,deactivate:this.clearPopup,scope:this}});},clearPopup:function(){if(this.popup){this.popup.close();delete this.popup;var controls=this.mapPanel.map.controls;for(var i=0,len=controls.length;i<len;i++){var c=controls[i];if(c.active&&c.handler&&c.handler.cancel){c.handler.cancel();}}}},report:function(evt){var geom=evt.geom;var geojson=new OpenLayers.Format.GeoJSON();var json=new OpenLayers.Format.JSON();var request={geometry:json.read(geojson.write(geom)),scale:this.mapPanel.map.getScale(),datalayers:[],politicalLayer:'base:distrits',politicalLayerAttributes:['CANTON','DISTRITO','PROVINCIA']};request.geometry.crs={"type":"name","properties":{"name":"EPSG:900913"}};this.mapPanel.layers.each(function(rec){var layer=rec.get("layer");if(layer.getVisibility()){for(var i=0;i<this.hazardConfig.length;i++){if(layer.name===this.hazardConfig[i].hazard){request.datalayers=request.datalayers.concat(layer.params.LAYERS);break;}}}},this);this.clearPopup();if(request.datalayers.length===0){alert(this.reportEmptyDataSetMessage);}else{request=json.write(request);Ext.Ajax.request({url:this.reportService+'.html',xmlData:request,method:"POST",success:function(response,options){this.popup=new GeoExt.Popup({feature:new OpenLayers.Feature.Vector(geom),title:this.reportPopupTitle,html:response.responseText,maximizable:true,height:300,width:350,autoScroll:true,map:this.mapPanel,bbar:['<a class="download pdf" href="'+this.reportService+'.pdf?'+
Ext.urlEncode({q:request})+'"> '+
this.pdfButtonText+'</a>'],listeners:{hide:this.clearPopup,scope:this}});this.mapPanel.add(this.popup);this.popup.show();},failure:function(response){alert(this.reportFailureMessage);},scope:this});}},createMapOverlay:function(){var scaleLinePanel=new Ext.Panel({cls:'olControlScaleLine overlay-element overlay-scaleline',border:false});scaleLinePanel.on('render',function(){var scaleLine=new OpenLayers.Control.ScaleLine({div:scaleLinePanel.body.dom});this.map.addControl(scaleLine);scaleLine.activate();},this);var zoomStore=new GeoExt.data.ScaleStore({map:this.map});var zoomSelector=new Ext.form.ComboBox({emptyText:this.zoomSelectorText,tpl:'<tpl for="."><div class="x-combo-list-item">1 : {[parseInt(values.scale)]}</div></tpl>',editable:false,triggerAction:'all',mode:'local',store:zoomStore,width:110});zoomSelector.on('click',function(evt){evt.stopEvent();});zoomSelector.on('mousedown',function(evt){evt.stopEvent();});zoomSelector.on('select',function(combo,record,index){this.map.zoomTo(record.data.level);},this);var zoomSelectorWrapper=new Ext.Panel({items:[zoomSelector],cls:'overlay-element overlay-scalechooser',border:false});this.map.events.register('zoomend',this,function(){var scale=zoomStore.queryBy(function(record){return this.map.getZoom()==record.data.level;});if(scale.length>0){scale=scale.items[0];zoomSelector.setValue("1 : "+parseInt(scale.data.scale,10));}else{if(!zoomSelector.rendered)return;zoomSelector.clearValue();}});var mapOverlay=new Ext.Panel({cls:'map-overlay',items:[scaleLinePanel,zoomSelectorWrapper]});mapOverlay.on("afterlayout",function(){scaleLinePanel.body.dom.style.position='relative';scaleLinePanel.body.dom.style.display='inline';mapOverlay.getEl().on("click",function(x){x.stopEvent();});mapOverlay.getEl().on("mousedown",function(x){x.stopEvent();});},this);return mapOverlay;}});Ext.namespace("capra");capra.AMEGrid=Ext.extend(Ext.util.Observable,{gridTitleText:'UT: AME Data',countryLabelText:'UT: Country',scenarioLabelText:'UT: Scenario',ameLabelText:'UT: Name',singularFileText:'UT:File',pluralFilesText:'UT:Files',downloadText:'UT:Download',fileDetailsText:'UT: More Information about this file',ameStore:null,constructor:function(config){Ext.apply(this,config);this.loadData();},loadData:function(){this.ameStore=new Ext.data.GroupingStore({proxy:new Ext.data.HttpProxy({url:this.file_info_url}),reader:new Ext.data.JsonReader({fields:['name','download_url','edit_url','filename','scenario','country']}),groupField:'scenario',sortInfo:{field:'scenario',direction:'ASC'},groupOnSort:true});gxp.util.dispatch([function(done){this.ameStore.load({callback:done,scope:this});}],this.doLayout,this);},doLayout:function(){var ame_detail='<p><b>'+this.downloadText+'</b> <a class = "download ame" href="{download_url}">{filename}</a></p>'
+'<p><a href="{edit_url}">'+this.fileDetailsText+'</a>';var ameExpander=new Ext.grid.RowExpander({tpl:new Ext.Template(ame_detail)});new Ext.grid.GridPanel({renderTo:this.renderTo,title:this.gridTitleText,store:this.ameStore,plugins:[ameExpander],columns:[ameExpander,{header:this.ameLabelText,dataIndex:'name'},{header:this.scenarioLabelText,dataIndex:'scenario'},{header:this.countryLabelText,dataIndex:'country'}],height:400,view:new Ext.grid.GroupingView({forceFit:true,groupTextTpl:'{text} ({[values.rs.length]} '+'{[values.rs.length == 1 ? "'+this.singularFileText+'" : "'+this.pluralFilesText+'"]})'}),viewConfig:{autoFill:true}});}});Ext.namespace("MyHazard");MyHazard.Reporter=OpenLayers.Class(OpenLayers.Control,{format:null,persist:true,EVENT_TYPES:["report"],initialize:function(handler,options){this.EVENT_TYPES=MyHazard.Reporter.prototype.EVENT_TYPES.concat(OpenLayers.Control.prototype.EVENT_TYPES);handler=handler||OpenLayers.Handler.Point;this.format=(options&&options.format)||new OpenLayers.Format.GeoJSON();OpenLayers.Control.prototype.initialize.apply(this,[options]);this.callbacks=OpenLayers.Util.extend({done:this.report},this.callbacks);this.handlerOptions=OpenLayers.Util.extend({persist:this.persist},this.handlerOptions);this.handler=new handler(this,this.callbacks,this.handlerOptions);},report:function(geom){this.events.triggerEvent("report",{geom:geom});}});Ext.namespace("MyHazard");MyHazard.LayerGroupOpacitySlider=Ext.extend(GeoExt.LayerOpacitySlider,{layers:null,changeLayerOpacity:function(slider,value){for(var i=0,len=this.layers.length;i<len;i++){GeoExt.LayerOpacitySlider.prototype.changeLayerOpacity.apply({layer:this.layers[i]},[slider,value]);}},changeLayerVisibility:function(slider,value){}});